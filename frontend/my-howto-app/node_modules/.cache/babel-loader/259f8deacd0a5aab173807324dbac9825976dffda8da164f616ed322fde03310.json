{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lael.junior\\\\Documents\\\\Projetos\\\\howto\\\\howto\\\\frontend\\\\my-howto-app\\\\src\\\\components\\\\HowtoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HowtoForm = ({\n  fetchHowtos,\n  selectedHowto\n}) => {\n  _s();\n  const [apiName, setApiName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    if (selectedHowto) {\n      setApiName(selectedHowto.apiName);\n      setDescription(selectedHowto.description);\n    }\n  }, [selectedHowto]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const method = selectedHowto ? \"PUT\" : \"POST\";\n    const url = selectedHowto ? `http://localhost:8080/howtos/${selectedHowto.id}` : \"http://localhost:8080/howtos\";\n    try {\n      await fetch(url, {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          apiName,\n          description\n        })\n      });\n      fetchHowtos(); // Atualizar lista de Howtos\n      setApiName(\"\");\n      setDescription(\"\");\n    } catch (error) {\n      console.error(\"Erro ao salvar o Howto:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedHowto ? \"Editar Howto\" : \"Novo Howto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"API Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: apiName,\n        onChange: e => setApiName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: selectedHowto ? \"Atualizar\" : \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(HowtoForm, \"p28IgHVWe1nyLHcKq09RK86ijhY=\");\n_c = HowtoForm;\nexport default HowtoForm;\nvar _c;\n$RefreshReg$(_c, \"HowtoForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HowtoForm","fetchHowtos","selectedHowto","_s","apiName","setApiName","description","setDescription","handleSubmit","e","preventDefault","method","url","id","fetch","headers","body","JSON","stringify","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/lael.junior/Documents/Projetos/howto/howto/frontend/my-howto-app/src/components/HowtoForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst HowtoForm = ({ fetchHowtos, selectedHowto }) => {\r\n  const [apiName, setApiName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (selectedHowto) {\r\n      setApiName(selectedHowto.apiName);\r\n      setDescription(selectedHowto.description);\r\n    }\r\n  }, [selectedHowto]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const method = selectedHowto ? \"PUT\" : \"POST\";\r\n    const url = selectedHowto\r\n      ? `http://localhost:8080/howtos/${selectedHowto.id}`\r\n      : \"http://localhost:8080/howtos\";\r\n\r\n    try {\r\n      await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          apiName,\r\n          description,\r\n        }),\r\n      });\r\n      fetchHowtos(); // Atualizar lista de Howtos\r\n      setApiName(\"\");\r\n      setDescription(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar o Howto:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{selectedHowto ? \"Editar Howto\" : \"Novo Howto\"}</h2>\r\n      <div>\r\n        <label>API Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={apiName}\r\n          onChange={(e) => setApiName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Descrição:</label>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">{selectedHowto ? \"Atualizar\" : \"Cadastrar\"}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default HowtoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}